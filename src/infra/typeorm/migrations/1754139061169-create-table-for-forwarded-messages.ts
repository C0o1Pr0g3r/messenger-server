import type { MigrationInterface, QueryRunner } from "typeorm";

import { getBoundSql } from "../utils";

export class CreateTableForForwardedMessages1754139061169 implements MigrationInterface {
  name = "CreateTableForForwardedMessages1754139061169";

  async up(queryRunner: QueryRunner): Promise<void> {
    const sql = getBoundSql(queryRunner);

    await sql`
      CREATE TABLE "forwarded_messages" (
        "id" INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
        "message_id" INTEGER NOT NULL,
        "forwarded_by_id" INTEGER NOT NULL,
        "chat_id" INTEGER NOT NULL,
        "created_at" TIMESTAMP NOT NULL DEFAULT now(),
        "updated_at" TIMESTAMP NOT NULL DEFAULT now(),
        "deleted_at" TIMESTAMP,
        CONSTRAINT "PK_0030e3e12a285db043dc355170d" PRIMARY KEY ("id")
      )
    `;
    await sql`
      ALTER TABLE "forwarded_messages"
      ADD CONSTRAINT "forwarded_messages_message_id_fk" FOREIGN key ("message_id") REFERENCES "messages" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION
    `;
    await sql`
      ALTER TABLE "forwarded_messages"
      ADD CONSTRAINT "forwarded_messages_forwarded_by_id_fk" FOREIGN key ("forwarded_by_id") REFERENCES "users" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION
    `;
    await sql`
      ALTER TABLE "forwarded_messages"
      ADD CONSTRAINT "forwarded_messages_chat_id_fk" FOREIGN key ("chat_id") REFERENCES "chats" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION
    `;
  }

  async down(queryRunner: QueryRunner): Promise<void> {
    const sql = getBoundSql(queryRunner);

    await sql`
      ALTER TABLE "forwarded_messages"
      DROP CONSTRAINT "forwarded_messages_chat_id_fk"
    `;
    await sql`
      ALTER TABLE "forwarded_messages"
      DROP CONSTRAINT "forwarded_messages_forwarded_by_id_fk"
    `;
    await sql`
      ALTER TABLE "forwarded_messages"
      DROP CONSTRAINT "forwarded_messages_message_id_fk"
    `;
    await sql`DROP TABLE "forwarded_messages"`;
  }
}
