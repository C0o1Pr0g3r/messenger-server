import type { MigrationInterface, QueryRunner } from "typeorm";

import { getBoundSql } from "../utils";

export class CreateTablesOfUsersChatsAndMessages1753829133230 implements MigrationInterface {
  name = "CreateTablesOfUsersChatsAndMessages1753829133230";

  async up(queryRunner: QueryRunner): Promise<void> {
    const sql = getBoundSql(queryRunner);

    await sql`
      CREATE TABLE "messages" (
        "id" INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
        "text" TEXT NOT NULL,
        "author_id" INTEGER NOT NULL,
        "chat_id" INTEGER NOT NULL,
        "created_at" TIMESTAMP NOT NULL DEFAULT now(),
        "updated_at" TIMESTAMP NOT NULL DEFAULT now(),
        "deleted_at" TIMESTAMP,
        CONSTRAINT "PK_18325f38ae6de43878487eff986" PRIMARY KEY ("id")
      )
    `;
    await sql`CREATE TYPE "public"."chat_type" AS ENUM('dialogue', 'polylogue')`;
    await sql`
      CREATE TABLE "chats" (
        "id" INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
        "name" TEXT NOT NULL,
        "link" TEXT NOT NULL,
        "type" "public"."chat_type" NOT NULL,
        "author_id" INTEGER NOT NULL,
        "created_at" TIMESTAMP NOT NULL DEFAULT now(),
        "updated_at" TIMESTAMP NOT NULL DEFAULT now(),
        "deleted_at" TIMESTAMP,
        CONSTRAINT "PK_0117647b3c4a4e5ff198aeb6206" PRIMARY KEY ("id")
      )
    `;
    await sql`CREATE UNIQUE INDEX "chats_link_unique" ON "chats" ("link") `;
    await sql`
      CREATE TABLE "users" (
        "id" INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
        "nickname" TEXT NOT NULL,
        "email" TEXT NOT NULL,
        "password_hash" TEXT NOT NULL,
        "is_private" BOOLEAN NOT NULL DEFAULT FALSE,
        "created_at" TIMESTAMP NOT NULL DEFAULT now(),
        "updated_at" TIMESTAMP NOT NULL DEFAULT now(),
        "deleted_at" TIMESTAMP,
        CONSTRAINT "PK_a3ffb1c0c8416b9fc6f907b7433" PRIMARY KEY ("id")
      )
    `;
    await sql`CREATE UNIQUE INDEX "users_email_unique" ON "users" ("email") `;
    await sql`
      ALTER TABLE "messages"
      ADD CONSTRAINT "FK_05535bc695e9f7ee104616459d3" FOREIGN key ("author_id") REFERENCES "users" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION
    `;
    await sql`
      ALTER TABLE "messages"
      ADD CONSTRAINT "FK_7540635fef1922f0b156b9ef74f" FOREIGN key ("chat_id") REFERENCES "chats" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION
    `;
    await sql`
      ALTER TABLE "chats"
      ADD CONSTRAINT "FK_18c56584cf0275f0740c5ae8a2a" FOREIGN key ("author_id") REFERENCES "users" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION
    `;
  }

  async down(queryRunner: QueryRunner): Promise<void> {
    const sql = getBoundSql(queryRunner);

    await sql`
      ALTER TABLE "chats"
      DROP CONSTRAINT "FK_18c56584cf0275f0740c5ae8a2a"
    `;
    await sql`
      ALTER TABLE "messages"
      DROP CONSTRAINT "FK_7540635fef1922f0b156b9ef74f"
    `;
    await sql`
      ALTER TABLE "messages"
      DROP CONSTRAINT "FK_05535bc695e9f7ee104616459d3"
    `;
    await sql`DROP INDEX "public"."users_email_unique"`;
    await sql`DROP TABLE "users"`;
    await sql`DROP INDEX "public"."chats_link_unique"`;
    await sql`DROP TABLE "chats"`;
    await sql`DROP TYPE "public"."chat_type"`;
    await sql`DROP TABLE "messages"`;
  }
}
